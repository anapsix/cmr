#!/usr/bin/perl

#
#   Copyright (C) 2014 Chitika Inc.
#
#   This file is a part of Cmr
#
#   Cmr is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use warnings;
use JSON::XS ();

use NanoMsg::Raw;

use File::Basename qw(dirname);
use Cwd qw(abs_path);
use lib  dirname(abs_path(__FILE__))."/../lib";
use Cmr::StartupUtils ();
use Cmr::Types ();

my ($log, $config) = Cmr::StartupUtils::script_init({
    'description' => 'Simple monitoring client, pretty prints cmr broadcast events',
    'config' => '/etc/cmr/config.ini',
    'no_lock'=>1,
});

use constant {
    MAX_JOBS => 15,
    MAX_SAMPLES => 60,
};

my $cs = nn_socket(AF_SP, NN_SUB);
nn_setsockopt($cs, NN_TCP, NN_TCP_NODELAY, 1);
nn_setsockopt($cs, NN_SUB, NN_SUB_SUBSCRIBE, "");
nn_connect($cs, "$config->{'global'}->{'caster_out'}" );

while(1) {
    nn_recv($cs, my $comp, 262143);
    my ($jid, $json) = split(/:/, $comp, 2);
    my $result = JSON::XS->new->decode($json);
    $log->info("$jid - Task: $Cmr::Types::Task->{$result->{'type'}}  Result: $Cmr::Types::Result->{$result->{'result'}}  Warnings: $result->{'warnings'}  Elapsed: $result->{'elapsed'}\n");
}

