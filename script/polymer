#!/usr/bin/perl

#
#   Copyright (C) 2014 Chitika Inc.
#
#   This file is a part of Cmr
#
#   Cmr is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use warnings;

use File::Basename qw(dirname);
use Cwd qw(abs_path);
use lib  dirname(abs_path(__FILE__))."/../lib";
use Cmr::Client;
use Cmr::StartupUtils ();

my ($log, $config) = Cmr::StartupUtils::script_init({
    'description' => "Column Store Map Reduce Client",
    'config' => "/etc/cmr/config.ini",
    'opts'         => [
        ['field|c=s@',          'Column to include in input'],
        ['input|i=s@',          'input path (accepts glob pattern)'],
        ['output|o=s',          'output path'],
        ['include|I=s@',        'include a key value pair - key:value'],
        ['exclude|E=s@',        'exclude a key value pair - key:value'],
        ['include-range|R=s@',  'include a key range pair - key:rangelow:rangehigh'],
        ['exclude-range|X=s@',  'include a key range pair - key:rangelow:rangehigh'],
        ['mapper|m=s',          'mapper command to invoke on each file batch'],
        ['reducer|r=s',         'reduce command to invoke on each file batch'],
        ['category|C=s@',       'category'],
        ['between|B=s',         'between'],
        ['servers=s',           'severs'],
        ['idcs=s',              'idcs'],
        ['verbose|v',           'verbose output'],
        ['force|F',             'force run (overwrite output path)'],
    ],
    'no_lock' => 1,
});

$config->{polymer} = 1;

die "No column specified" unless $config->{'field'};
die "No input specified" unless $config->{'input'} or ($config->{'category'} and $config->{'between'});


my $cmr = Cmr::Client::new($config);
my $jid = $cmr->{'reactor'}->{'jid'};
$SIG{'INT'} = sub {
    $cmr->scram();
    `curl $config->{global}->{seaweed_addr}/col/delete?collection=job_${jid}`;
    `redis-cli -n 1 KEYS "job/${jid}*" | xargs redis-cli -n 1 DEL`;
    `redis-cli -n 1 HDEL job ${jid}`;
};

$cmr->polymer();

`curl $config->{global}->{seaweed_addr}/col/delete?collection=job_${jid}`;
`redis-cli -n 1 KEYS "job/${jid}*" | xargs redis-cli -n 1 DEL`;
`redis-cli -n 1 HDEL job ${jid}`;


if ( $cmr->failed() ) {
    $cmr->scram();
    exit(1);
}

if ( $cmr->finish() == &Cmr::Client::FAIL ) {
    exit(1);
}

